name: compose-ci

on: [push, pull_request]

jobs:
  compose-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (with submodules)
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Download test data
        run: |
          mkdir -p data/input
          touch inference/checkpoint.pth
          aws s3 cp --no-sign-request "s3://noaa-wcsd-pds/data/raw/Bell_M._Shimada/SH2306/EK80/Hake-D20230811-T165727.raw" data/input/

      - name: Start Docker pipeline (detached)
        run: |
          docker compose \
            -f docker-compose.yml \
            up \
            --build -d \
            raw preprocessing infer

      - name: Wait for inference output (max 5 min)
        run: |
          end=$((SECONDS+60))  # 1 minute timeout
          echo "Polling for files in data/inference ..."
          while [ $SECONDS -lt $end ]; do
            file_count=$(ls -1 data/inference 2>/dev/null | wc -l || true)
            if [ "$file_count" -gt 0 ]; then
              echo "✅  Found $file_count file(s) in data/inference – pipeline succeeded."
              exit 0
            fi
            sleep 10
          done
          echo "❌  No files produced in data/inference within 1 minute."
          docker compose -f docker-compose.yml logs --tail 50
          exit 1
      - name: Embed PNG preview in summary
        if: success()
        run: |
          shopt -s globstar nullglob   # << enable ** and skip if nothing matches
          echo "## Preprocessing sample" >> $GITHUB_STEP_SUMMARY
          for img in data/preprocessing/**/*.png; do       # no ls needed
      b64=$(base64 -w 0 "$img")
      echo "<img src=\"data:image/png;base64,$b64\" height=\"200\"/>" \
           >> $GITHUB_STEP_SUMMARY
      ((count++ == 4)) && break      # stop after 5 images
    done
    echo "" >> $GITHUB_STEP_SUMMARY

    echo "## Inference sample" >> $GITHUB_STEP_SUMMARY
    for img in data/inference/**/*.png; do
      b64=$(base64 -w 0 "$img")
      echo "<img src=\"data:image/png;base64,$b64\" height=\"200\"/>" \
           >> $GITHUB_STEP_SUMMARY
      ((count++ == 4)) && break
        done
      # 3) Always tear down containers & volumes so runners stay clean
      - name: Teardown
        if: always()
        run: docker compose -f docker-compose.yml down -v
